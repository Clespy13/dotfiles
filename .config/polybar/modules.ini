[module/workspaces]
type = internal/xworkspaces

; Create scroll handlers used to cycle desktops
; Default: true
enable-scroll = false

; icon-[0-9]+ = <desktop-name>;<icon>
; Map desktop names to some icon. The icon is then available in the %icon% token
; NOTE: The desktop name needs to match the name configured by the WM
; You can get a list of the defined desktop names using:
; $ xprop -root _NET_DESKTOP_NAMES
; NOTE: Neither <desktop-name> nor <icon> can contain a semicolon (;)
icon-0 = 1;‚ôö
icon-1 = 2;‚ôõ
icon-2 = 3;‚ôú
icon-3 = 4;‚ôù
icon-4 = 5;‚ôû
icon-default = ‚ôü

; Used for the currently selected workspaces
; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %nwin% (New in version 3.6.0)
; Default: %icon% %name%
label-active = %icon%
label-active-foreground = #ffffff
label-active-background = #3f3f3f
label-active-underline = #fba922
label-active-padding = 4

; Used for workspaces at least one window
; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %nwin% (New in version 3.6.0)
; Default: %icon% %name%
label-occupied = %icon%
label-occupied-underline = #555555
label-occupied-padding = 1

; Used for workspaces containing a window that is demanding attention (has the
; urgent bit set)
; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %nwin% (New in version 3.6.0)
; Default: %icon% %name%
label-urgent = %icon%
label-urgent-foreground = #000000
label-urgent-background = #bd2c40
label-urgent-underline = #9b0a20
label-urgent-padding = 4

; Used for workspaces without windows
; Available tokens:
;   %name%
;   %icon%
;   %index%
;   %nwin% (New in version 3.6.0)
; Default: %icon% %name%
label-empty = %icon%
label-empty-foreground = #55
label-empty-padding = 2

[module/spotify]
type = custom/script
interval = 1
format-prefix = "üéµ "
format = <label>
exec = python ~/.config/polybar/polybar-scripts/spotify.py -f '{artist} - {song} {album}'
format-underline = #1db954 
; ${colors.green}
;control players (optional)
click-left = playerctl --player=spotify play-pause 
click-right = playerctl --player=spotify next 
click-middle = playerctl --player=spotify previous 

[module/date]
type = internal/date

; Seconds to sleep between updates
; Default: 1.0
interval = 1.0

; See "https://en.cppreference.com/w/cpp/io/manip/put_time" for details on how to format the date string
; NOTE: if you want to use syntax tags here you need to use %%{...}
date = %d/%m/%Y%

; Optional time format
time = %H:%M

; if `date-alt` or `time-alt` is defined, clicking
; the module will toggle between formats
date-alt = %A, %d %B %Y
time-alt = %H:%M:%S
label = %date% %time%

[module/updates]
type = custom/script
exec = ~/.config/polybar/polybar-scripts/updates-pacman-aurhelper.sh
interval = 600
format = <label>

[module/title]
type = internal/xwindow

format-padding = 2

label = %title%
label-maxlen = 75 

[module/audio]
type = internal/pulseaudio
; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
; sink = alsa_output.pci-0000_12_00.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5
; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>
format-volume-padding = 2
; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
;format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
;   %decibels%
;label-muted = üîá
label-muted = muted
label-muted-foreground = #666
label-muted-padding = 2

; Only applies if <ramp-volume> is used
ramp-volume-0 = üîà
;ramp-volume-1 = üîâ
ramp-volume-1 = üîä

; Right and Middle click
; click-right = pavucontrol
; click-middle = 

[module/battery]
type = internal/battery

; This is useful in case the battery never reports 100% charge
; Default: 100
full-at = 99

; format-low once this charge percentage is reached
; Default: 10
; New in version 3.6.0
low-at = 5

; Use the following command to list batteries and adapters:
; $ ls -1 /sys/class/power_supply/
battery = BAT0
adapter = ADP1

; If an inotify event haven't been reported in this many
; seconds, manually poll for new values.
;
; Needed as a fallback for systems that don't report events
; on sysfs/procfs.
;
; Disable polling by setting the interval to 0.
;
; Default: 5
poll-interval = 5
